{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/poki/src/components/CardList/CardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './CardList.css';\nimport Card from '../Card/Card';\nimport { getAllPokemon, getPokemon } from '../services/pokemon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardList() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [searchfield, setSearchfield] = useState('');\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      let pokemon = await loadingPokemon(response.results); // console.log(pokemon);\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: pokemonData.map((pokemon, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          pokemon: pokemon\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card__types tc\",\n      children: pokemon.types.map(type => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Card__type\",\n          style: {\n            backgroundColor: typeColors[type.type.name]\n          },\n          children: type.type.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CardList, \"1K7mTzRQUD7Sw/T4NbuHgiSi4hc=\");\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/poki/src/components/CardList/CardList.js"],"names":["React","useState","useEffect","Card","getAllPokemon","getPokemon","CardList","pokemonData","setPokemonData","nextUrl","setNexUrl","prevUrl","setPrevUrl","loading","setLoading","searchfield","setSearchfield","initialUrl","fetchData","response","next","previous","pokemon","loadingPokemon","results","data","_pokemonData","Promise","all","map","pokemonRecord","url","i","types","type","backgroundColor","typeColors","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAAyC,qBAAzC;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACF,QAAM,CAACQ,OAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMgB,UAAU,GAAG,mCAAnB;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMf,aAAa,CAACa,UAAD,CAAlC;AACAP,MAAAA,SAAS,CAACS,QAAQ,CAACC,IAAV,CAAT;AACAR,MAAAA,UAAU,CAACO,QAAQ,CAACE,QAAV,CAAV;AACA,UAAIC,OAAO,GAAG,MAAMC,cAAc,CAACJ,QAAQ,CAACK,OAAV,CAAlC,CAJyB,CAKzB;;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDI,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;;AAeA,QAAMK,cAAc,GAAG,MAAOE,IAAP,IAAgB;AACrC,QAAIC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAR,CACvBH,IAAI,CAACI,GAAL,CAAS,MAAMP,OAAN,IAAiB;AAC1B,UAAIQ,aAAa,GAAG,MAAMzB,UAAU,CAACiB,OAAO,CAACS,GAAT,CAApC;AACA,aAAOD,aAAP;AACD,KAHC,CADuB,CAAzB;;AAMAtB,IAAAA,cAAc,CAACkB,YAAD,CAAd;AACD,GARD;;AAWA,sBACI;AAAA,eAGGb,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEL;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGN,WAAW,CAACsB,GAAZ,CAAgB,CAACP,OAAD,EAAUU,CAAV,KAAgB;AAC/B,4BAAO,QAAC,IAAD;AAAc,UAAA,OAAO,EAAEV;AAAvB,WAAWU,CAAX;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YALL,eAcN;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAEQV,OAAO,CAACW,KAAR,CAAcJ,GAAd,CAAkBK,IAAI,IAAI;AACtB,4BACC;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAEC,UAAU,CAACF,IAAI,CAACA,IAAL,CAAUG,IAAX;AAA7B,WAAnC;AAAA,oBACAH,IAAI,CAACA,IAAL,CAAUG;AADV;AAAA;AAAA;AAAA;AAAA,gBADD;AAKH,OAND;AAFR;AAAA;AAAA;AAAA;AAAA,YAdM;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCD;;GA3EQ/B,Q;;KAAAA,Q;AA4ET,eAAeA,QAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport './CardList.css';\nimport Card from '../Card/Card';\nimport { getAllPokemon, getPokemon} from '../services/pokemon'\n\n\nfunction CardList() {\n    const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNexUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [searchfield, setSearchfield] = useState('');\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n\n\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNexUrl(response.next);\n      setPrevUrl(response.previous);\n      let pokemon = await loadingPokemon(response.results);\n      // console.log(pokemon);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n\n\n\n  const loadingPokemon = async (data) => {\n    let _pokemonData = await Promise.all(\n      data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }))\n\n    setPokemonData(_pokemonData)\n  };\n\n\n  return (\n      <div>\n\n{\n         loading ? <h1>loading.....</h1> :(\n        \n           <div className=\"grid-container\">\n             {pokemonData.map((pokemon, i) => {\n               return <Card key={i} pokemon={pokemon}  />\n             })}\n           </div>\n         )\n      }\n\n\n<div className=\"Card__types tc\">\n    {\n        pokemon.types.map(type => {\n            return (\n             <div className=\"Card__type\" style={{ backgroundColor: typeColors[type.type.name] }}>\n            {type.type.name} \n            </div>         \n            )\n        })\n    }\n        \n    </div>\n      \n\n      </div>\n  )\n\n\n\n\n  \n\n\n}\nexport default CardList;"]},"metadata":{},"sourceType":"module"}